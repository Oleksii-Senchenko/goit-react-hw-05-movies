{"version":3,"file":"static/js/982.9fdf4c3a.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAW,mCAAG,WAAMC,GAAN,gGAEOH,EAAAA,EAAAA,IAAA,UAAaG,IAFpB,cAEVC,EAFU,yBAGTA,GAHS,gCAKhBC,QAAQC,IAAR,MALgB,yDAAH,sDAQjB,K,kLCXaC,EAAwBC,EAAAA,EAAAA,IAAH,uJAMrBC,EAAcD,EAAAA,EAAAA,IAAH,kFAMXE,EAAaF,EAAAA,EAAAA,IAAH,0BAQVG,GAJYH,EAAAA,EAAAA,IAAH,wCAIIA,EAAAA,EAAAA,GAAH,qFAMVI,EAAYJ,EAAAA,EAAAA,EAAH,+EAMTK,EAAWL,EAAAA,EAAAA,IAAH,6DAMRM,EAAkBN,EAAAA,EAAAA,IAAH,6CAIfO,EAAQP,EAAAA,EAAAA,EAAH,yH,SCkClB,EAjEqB,WAAO,IAAD,IACjBQ,GAAaC,EAAAA,EAAAA,MAAbD,SAEFE,GAAWC,EAAAA,EAAAA,MACjBd,QAAQC,IAAIY,GAEZ,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMtB,EAAAA,EAAAA,GAAY,SAAD,OAAUc,IAF3B,OAEXS,EAFW,OAGjBH,EAASG,EAASC,MAHD,gDAKjBrB,QAAQsB,MAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACR,KACCK,EACH,OAAO,yBAAK,sBAGd,IAAMO,EAAYC,KAAKC,MAA2B,GAArBT,EAAMU,cAE7BC,EAAQ,iBAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUe,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE1C,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,SAAoB,aACpB,UAACzB,EAAD,YACE,SAACE,EAAD,CACE2B,IAAG,8CAAyCf,EAAMgB,aAClDC,IAAKjB,EAAMkB,SAEb,UAAC7B,EAAD,YACE,SAACC,EAAD,UAAaU,EAAMkB,OAASlB,EAAMmB,QAClC,UAAC5B,EAAD,WAAW,eAAagB,EAAU,QAClC,UAACf,EAAD,YACE,wBAAI,cACJ,uBAAIQ,EAAMoB,eAEZ,UAAC3B,EAAD,YACE,eAAI4B,MAAO,CAAEC,MAAO,SAApB,SAA+B,WAC9BtB,EAAMuB,OAAOC,KAAI,SAAAC,GAAK,OACrB,SAAC/B,EAAD,UAAuB+B,EAAMN,MAAjBM,EAAMC,GADG,cAM7B,4BACE,wBAAI,2BACJ,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAE,kBAAanB,EAAb,SAAR,SAAsC,YAExC,yBACE,SAAC,KAAD,CAAMmB,GAAE,kBAAanB,EAAb,YAAR,SAAyC,kBAG7C,SAAC,KAAD,SAIP,C","sources":["API/API.js","pages/DetailMovies/DetailMovies.styled.js","pages/DetailMovies/DetailMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '9bfa62f8674a101d6532f8d8237daa28',\n};\n\nconst fetchMovies = async path => {\n  try {\n    const responce = await axios.get(`${path}`);\n    return responce;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport default fetchMovies;\n","\nimport styled from '@emotion/styled';\n\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  margin: 20px;\n   background-image: linear-gradient(to bottom, rgba(10, 9, 9, 0.8), rgba(10, 9, 9, 0.9));\n`;\n\nexport const MoviePoster = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-right: 20px;\n`;\n\nexport const AboutMovie = styled.div`\n\n`;\n\nexport const MovieInfo = styled.div`\n  color: #333;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: white\n`;\n\nexport const UserScore = styled.p`\n  font-size: 18px;\n  margin: 5px 0;\n   color: white\n`;\n\nexport const Overview = styled.div`\n  margin: 20px 0;\n  color: white\n\n`;\n\nexport const GenresContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const Genre = styled.p`\n  background-color: #f0f0f0;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin: 5px 0;\n  \n`;","import React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport fetchMovies from 'API/API';\nimport {\n  MovieDetailsContainer,\n  MoviePoster,\n  AboutMovie,\n  MovieTitle,\n  UserScore,\n  Overview,\n  GenresContainer,\n  Genre,\n} from './DetailMovies.styled';\n\nconst DetailMovies = () => {\n  const { moviesId } = useParams();\n\n  const location = useLocation();\n  console.log(location);\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchMovies(`movie/${moviesId}`);\n        setMovie(response.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchDetails();\n  }, [moviesId]);\n  if (!movie) {\n    return <div>Film is not found</div>;\n  }\n\n  const userScore = Math.round(movie.vote_average * 10);\n\n  const cameFrom = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={cameFrom}>Go back</Link>\n      <MovieDetailsContainer>\n        <MoviePoster\n          src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <AboutMovie>\n          <MovieTitle>{movie.title || movie.name}</MovieTitle>\n          <UserScore>User Score: {userScore}%</UserScore>\n          <Overview>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </Overview>\n          <GenresContainer>\n            <h3 style={{ color: 'white' }}>Genres</h3>\n            {movie.genres.map(genre => (\n              <Genre key={genre.id}>{genre.name}</Genre>\n            ))}\n          </GenresContainer>\n        </AboutMovie>\n      </MovieDetailsContainer>\n      <div>\n        <h3>Aditional information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${moviesId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${moviesId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\nexport default DetailMovies;\n"],"names":["axios","api_key","fetchMovies","path","responce","console","log","MovieDetailsContainer","styled","MoviePoster","AboutMovie","MovieTitle","UserScore","Overview","GenresContainer","Genre","moviesId","useParams","location","useLocation","useState","movie","setMovie","useEffect","fetchDetails","response","data","error","userScore","Math","round","vote_average","cameFrom","state","from","to","src","poster_path","alt","title","name","overview","style","color","genres","map","genre","id"],"sourceRoot":""}